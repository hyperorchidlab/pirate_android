package com.hop.pirate.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.hop.pirate.model.bean.ExtendToken;
import com.hop.pirate.model.bean.MinePoolBean;
import com.hop.pirate.model.bean.MinerBean;
import com.hop.pirate.model.bean.OwnPool;
import com.hop.pirate.model.bean.TokenBean;
import com.hop.pirate.model.bean.UserAccountData;
import com.hop.pirate.model.bean.WalletBean;

import com.hop.pirate.greendao.ExtendTokenDao;
import com.hop.pirate.greendao.MinePoolBeanDao;
import com.hop.pirate.greendao.MinerBeanDao;
import com.hop.pirate.greendao.OwnPoolDao;
import com.hop.pirate.greendao.TokenBeanDao;
import com.hop.pirate.greendao.UserAccountDataDao;
import com.hop.pirate.greendao.WalletBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig extendTokenDaoConfig;
    private final DaoConfig minePoolBeanDaoConfig;
    private final DaoConfig minerBeanDaoConfig;
    private final DaoConfig ownPoolDaoConfig;
    private final DaoConfig tokenBeanDaoConfig;
    private final DaoConfig userAccountDataDaoConfig;
    private final DaoConfig walletBeanDaoConfig;

    private final ExtendTokenDao extendTokenDao;
    private final MinePoolBeanDao minePoolBeanDao;
    private final MinerBeanDao minerBeanDao;
    private final OwnPoolDao ownPoolDao;
    private final TokenBeanDao tokenBeanDao;
    private final UserAccountDataDao userAccountDataDao;
    private final WalletBeanDao walletBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        extendTokenDaoConfig = daoConfigMap.get(ExtendTokenDao.class).clone();
        extendTokenDaoConfig.initIdentityScope(type);

        minePoolBeanDaoConfig = daoConfigMap.get(MinePoolBeanDao.class).clone();
        minePoolBeanDaoConfig.initIdentityScope(type);

        minerBeanDaoConfig = daoConfigMap.get(MinerBeanDao.class).clone();
        minerBeanDaoConfig.initIdentityScope(type);

        ownPoolDaoConfig = daoConfigMap.get(OwnPoolDao.class).clone();
        ownPoolDaoConfig.initIdentityScope(type);

        tokenBeanDaoConfig = daoConfigMap.get(TokenBeanDao.class).clone();
        tokenBeanDaoConfig.initIdentityScope(type);

        userAccountDataDaoConfig = daoConfigMap.get(UserAccountDataDao.class).clone();
        userAccountDataDaoConfig.initIdentityScope(type);

        walletBeanDaoConfig = daoConfigMap.get(WalletBeanDao.class).clone();
        walletBeanDaoConfig.initIdentityScope(type);

        extendTokenDao = new ExtendTokenDao(extendTokenDaoConfig, this);
        minePoolBeanDao = new MinePoolBeanDao(minePoolBeanDaoConfig, this);
        minerBeanDao = new MinerBeanDao(minerBeanDaoConfig, this);
        ownPoolDao = new OwnPoolDao(ownPoolDaoConfig, this);
        tokenBeanDao = new TokenBeanDao(tokenBeanDaoConfig, this);
        userAccountDataDao = new UserAccountDataDao(userAccountDataDaoConfig, this);
        walletBeanDao = new WalletBeanDao(walletBeanDaoConfig, this);

        registerDao(ExtendToken.class, extendTokenDao);
        registerDao(MinePoolBean.class, minePoolBeanDao);
        registerDao(MinerBean.class, minerBeanDao);
        registerDao(OwnPool.class, ownPoolDao);
        registerDao(TokenBean.class, tokenBeanDao);
        registerDao(UserAccountData.class, userAccountDataDao);
        registerDao(WalletBean.class, walletBeanDao);
    }
    
    public void clear() {
        extendTokenDaoConfig.clearIdentityScope();
        minePoolBeanDaoConfig.clearIdentityScope();
        minerBeanDaoConfig.clearIdentityScope();
        ownPoolDaoConfig.clearIdentityScope();
        tokenBeanDaoConfig.clearIdentityScope();
        userAccountDataDaoConfig.clearIdentityScope();
        walletBeanDaoConfig.clearIdentityScope();
    }

    public ExtendTokenDao getExtendTokenDao() {
        return extendTokenDao;
    }

    public MinePoolBeanDao getMinePoolBeanDao() {
        return minePoolBeanDao;
    }

    public MinerBeanDao getMinerBeanDao() {
        return minerBeanDao;
    }

    public OwnPoolDao getOwnPoolDao() {
        return ownPoolDao;
    }

    public TokenBeanDao getTokenBeanDao() {
        return tokenBeanDao;
    }

    public UserAccountDataDao getUserAccountDataDao() {
        return userAccountDataDao;
    }

    public WalletBeanDao getWalletBeanDao() {
        return walletBeanDao;
    }

}
